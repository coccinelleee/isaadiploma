"use strict";(self.webpackChunkpython_guide_for_javascript_engineers=self.webpackChunkpython_guide_for_javascript_engineers||[]).push([[4966],{8029:(e,i,n)=>{n.r(i),n.d(i,{assets:()=>o,contentTitle:()=>a,default:()=>f,frontMatter:()=>l,metadata:()=>d,toc:()=>c});var s=n(4848),t=n(8453),r=n(2830);const l={id:"task-list-files",slug:"/task-list-files",title:"\u0424\u0430\u0439\u043b \u0448\u043e\u043b\u0493\u044b\u0448\u044b",sidebar_label:"\u0424\u0430\u0439\u043b \u0448\u043e\u043b\u0493\u044b\u0448\u044b"},a=void 0,d={id:"task-list-files",title:"\u0424\u0430\u0439\u043b \u0448\u043e\u043b\u0493\u044b\u0448\u044b",description:"\u0422\u0430\u043f\u0441\u044b\u0440\u043c\u0430",source:"@site/docs/task-list-files.mdx",sourceDirName:".",slug:"/task-list-files",permalink:"/python-guide-for-javascript-engineers/zh-cn/task-list-files",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{id:"task-list-files",slug:"/task-list-files",title:"\u0424\u0430\u0439\u043b \u0448\u043e\u043b\u0493\u044b\u0448\u044b",sidebar_label:"\u0424\u0430\u0439\u043b \u0448\u043e\u043b\u0493\u044b\u0448\u044b"},sidebar:"docs",previous:{title:"\u0422\u0438\u043f \u0430\u043d\u043d\u043e\u0442\u0430\u0446\u0438\u044f\u043b\u0430\u0440\u044b",permalink:"/python-guide-for-javascript-engineers/zh-cn/typing-annotation"},next:{title:"GitHub \u0422\u041e\u041f 50",permalink:"/python-guide-for-javascript-engineers/zh-cn/task-top-50-in-github"}},o={},c=[{value:"\u0422\u0430\u043f\u0441\u044b\u0440\u043c\u0430",id:"\u0442\u0430\u043f\u0441\u044b\u0440\u043c\u0430",level:3}];function h(e){const i={code:"code",h3:"h3",li:"li",p:"p",ul:"ul",...(0,t.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(i.h3,{id:"\u0442\u0430\u043f\u0441\u044b\u0440\u043c\u0430",children:"\u0422\u0430\u043f\u0441\u044b\u0440\u043c\u0430"}),"\n",(0,s.jsxs)(i.p,{children:[(0,s.jsx)(i.code,{children:"ls"})," \u043a\u043e\u043c\u0430\u043d\u0434\u0430\u0441\u044b \u2014 Linux \u0436\u04af\u0439\u0435\u0441\u0456\u043d\u0434\u0435 \u0444\u0430\u0439\u043b\u0434\u0430\u0440\u0434\u044b \u043a\u04e9\u0440\u0443 \u04af\u0448\u0456\u043d \u049b\u043e\u043b\u0434\u0430\u043d\u044b\u043b\u0430\u0442\u044b\u043d \u049b\u0443\u0430\u0442\u0442\u044b \u049b\u04b1\u0440\u0430\u043b."]}),"\n",(0,s.jsx)(i.p,{children:"\u041e\u0441\u044b\u0493\u0430\u043d \u04b1\u049b\u0441\u0430\u0441 \u043f\u04d9\u0440\u043c\u0435\u043d \u0436\u043e\u043b\u044b \u049b\u04b1\u0440\u0430\u043b\u044b\u043d Python \u0442\u0456\u043b\u0456\u043d\u0434\u0435 \u0436\u04af\u0437\u0435\u0433\u0435 \u0430\u0441\u044b\u0440\u044b\u04a3\u044b\u0437. \u041e\u043b \u043a\u0435\u043b\u0435\u0441\u0456 \u043f\u04d9\u0440\u043c\u0435\u043d \u0436\u043e\u043b\u044b \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u043b\u0435\u0440\u0456\u043d \u049b\u043e\u043b\u0434\u0430\u0443\u044b \u0442\u0438\u0456\u0441:"}),"\n",(0,s.jsxs)(i.ul,{children:["\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.code,{children:"-a"})," \u043d\u0435\u043c\u0435\u0441\u0435 ",(0,s.jsx)(i.code,{children:"--all"}),": \u0416\u0430\u0441\u044b\u0440\u044b\u043d \u0444\u0430\u0439\u043b\u0434\u0430\u0440\u0434\u044b \u0444\u0430\u0439\u043b \u0442\u0456\u0437\u0456\u043c\u0456\u043d\u0435 \u049b\u043e\u0441\u0443."]}),"\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.code,{children:"-w"})," \u043d\u0435\u043c\u0435\u0441\u0435 ",(0,s.jsx)(i.code,{children:"--human-readable"}),": \u0424\u0430\u0439\u043b \u04e9\u043b\u0448\u0435\u043c\u0456\u043d \u043e\u049b\u0443\u0493\u0430 \u044b\u04a3\u0493\u0430\u0439\u043b\u044b \u0444\u043e\u0440\u043c\u0430\u0442\u0442\u0430 \u043a\u04e9\u0440\u0441\u0435\u0442\u0443."]}),"\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.code,{children:"-h"})," \u043d\u0435\u043c\u0435\u0441\u0435 ",(0,s.jsx)(i.code,{children:"--help"}),": \u0410\u043d\u044b\u049b\u0442\u0430\u043c\u0430 \u0430\u049b\u043f\u0430\u0440\u0430\u0442\u044b\u043d \u043a\u04e9\u0440\u0441\u0435\u0442\u0443."]}),"\n"]}),"\n",(0,s.jsx)(r.A,{title:"\ud83d\udcc1 \u0424\u0430\u0439\u043b\u0434\u0430\u0440\u0434\u044b \u0442\u0456\u0437\u0456\u043c\u0434\u0435\u0443 \u049b\u04b1\u0440\u0430\u043b\u044b (ls.py)",language:"python",code:"import os\nimport argparse\nimport sys\n\ndef ls(directory='.', show_hidden=False, human_readable=False):\n    file_list = os.listdir(directory)\n    file_list.sort()\n\n    if not show_hidden:\n        file_list = [f for f in file_list if not f.startswith('.')]\n\n    if human_readable:\n        file_list = [(f, get_human_readable_size(os.path.join(directory, f))) for f in file_list]\n        for file, size in file_list:\n            print(f\"{file}\\t{size}\")\n    else:\n        for file in file_list:\n            print(file)\n\ndef get_human_readable_size(file_path):\n    size = os.path.getsize(file_path)\n    units = ['B', 'KB', 'MB', 'GB', 'TB']\n    index = 0\n    while size >= 1024 and index < len(units) - 1:\n        size /= 1024\n        index += 1\n    return f\"{size:.2f} {units[index]}\"\n\ndef main():\n    parser = argparse.ArgumentParser(description='\u041a\u0430\u0442\u0430\u043b\u043e\u0433\u0442\u0430\u0493\u044b \u0444\u0430\u0439\u043b\u0434\u0430\u0440\u0434\u044b \u0442\u0456\u0437\u0456\u043c\u0434\u0435\u0443.')\n    parser.add_argument('-a', '--all', action='store_true', help='\u0416\u0430\u0441\u044b\u0440\u044b\u043d \u0444\u0430\u0439\u043b\u0434\u0430\u0440\u0434\u044b \u049b\u043e\u0441\u0443')\n    parser.add_argument('-w', '--human-readable', action='store_true', help='\u0424\u0430\u0439\u043b \u04e9\u043b\u0448\u0435\u043c\u0434\u0435\u0440\u0456\u043d \u043e\u049b\u0443\u0493\u0430 \u044b\u04a3\u0493\u0430\u0439\u043b\u044b \u0444\u043e\u0440\u043c\u0430\u0442\u0442\u0430 \u043a\u04e9\u0440\u0441\u0435\u0442\u0443')\n    args = parser.parse_args()\n\n    ls(directory='.', show_hidden=args.all, human_readable=args.human_readable)\n\nif __name__ == '__main__':\n    main()"})]})}function f(e={}){const{wrapper:i}={...(0,t.R)(),...e.components};return i?(0,s.jsx)(i,{...e,children:(0,s.jsx)(h,{...e})}):h(e)}}}]);